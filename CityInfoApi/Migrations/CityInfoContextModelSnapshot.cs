// <auto-generated />
using CityInfoApi.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityInfoApi.Migrations
{
    [DbContext(typeof(CityInfoContext))]
    partial class CityInfoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("CityInfoApi.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "La capital de Estados Unidos",
                            Name = "New York City"
                        },
                        new
                        {
                            Id = 2,
                            Description = "La capital de Chile",
                            Name = "Santiago"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Esta a punto de E.X.P.L.O.T.A.R",
                            Name = "Neo-Tokyo"
                        });
                });

            modelBuilder.Entity("CityInfoApi.Entities.PointOfInterest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("PointsOfInterest");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Description = "Un parque verde y grande",
                            Name = "Central Park"
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Description = "Un edificio grande donde está el PingPin",
                            Name = "Empire State"
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Description = "Llena de gente variopinta",
                            Name = "Plaza de armas"
                        },
                        new
                        {
                            Id = 4,
                            CityId = 2,
                            Description = "Un edificio grande donde vive Sauron",
                            Name = "Costanera center"
                        },
                        new
                        {
                            Id = 5,
                            CityId = 3,
                            Description = "Torre representativa de tokyo y japon",
                            Name = "Torre de tokyo"
                        },
                        new
                        {
                            Id = 6,
                            CityId = 3,
                            Description = "Cruce mas famoso de japon, aparece en todas las series y peliculas",
                            Name = "Shibuya Crossing"
                        });
                });

            modelBuilder.Entity("CityInfoApi.Entities.PointOfInterest", b =>
                {
                    b.HasOne("CityInfoApi.Entities.City", "City")
                        .WithMany("PointsOfInterest")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("CityInfoApi.Entities.City", b =>
                {
                    b.Navigation("PointsOfInterest");
                });
#pragma warning restore 612, 618
        }
    }
}
